<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

	<security:http pattern="/css/**" security="none" />
	<security:http pattern="/login.html*" security="none" />
	<security:http pattern="/app/login/**" security="none"/>
	<security:http pattern="/resources/login/**" security="none"/>
	<security:http pattern="/Index/searchName*" security="none"/>

	<security:http auto-config="false" use-expressions="true" disable-url-rewriting="true"
		access-denied-page="/denied.html" entry-point-ref="authenticationEntryPoint">


		<!-- FILTERS -->
		<security:custom-filter position="CONCURRENT_SESSION_FILTER"
			ref="concurrencyFilter" />
		<security:custom-filter position="FORM_LOGIN_FILTER"
			ref="authenticationFilter" />
		<!-- requires-channel https -->
		<security:intercept-url pattern="/signup/**"
			access="isAnonymous()" />
		<security:intercept-url pattern="/signup.jsp"
			access="isAnonymous()" />
		<security:intercept-url pattern="/Index/**"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/user/**"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/index.html"
			access="isAuthenticated()" />
		<!-- <port-mappings> <port-mapping http="8080" https="8080"/> </port-mappings> -->
		<!-- You can use authentication-failure-url or session-authentication-error-url -->


		<!-- <form-login login-page='/login.html' default-target-url='/index.html' 
			always-use-default-target='true' /> -->


		<!-- Delete cookies else login, logout and login without closing browser 
			cause invalid session -->
		<!-- location match problem olabilir dokumentasyondan bakarsın -->
		<security:logout invalidate-session="true"
			logout-success-url="/login.html" logout-url='/logout.html'
			delete-cookies="JSESSIONID" />



		<security:session-management
			session-authentication-strategy-ref="sas" />

		<security:session-management
			invalid-session-url="/invalidSession.html" />
		<!-- Provides more than one login for a user, if you want to give error 
			for second login use error-if-maximum-exceeded="true" -->
		<security:session-management>
			<security:concurrency-control
				max-sessions="1" />
		</security:session-management>
	</security:http>

	<bean id="authenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<property name="sessionAuthenticationStrategy" ref="sas" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationFailureHandler" ref="customAuthenticationFailureHandler" />
		<property name="authenticationSuccessHandler" ref="customAuthenticationSuccessHandler" />
	</bean>

	<bean id="customAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
	   <property name="defaultFailureUrl" value="/login.html?error=true" />
	</bean>

	<bean id="customAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/index.html" />
	</bean>


	<bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/login.html" />
	</bean>


	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			user-service-ref="UrbSourceUserDetailsService">
			<!-- <password-encoder ref="encoder"></password-encoder> -->
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean> -->

	<!-- Bu bean user bilgilerinin databaseden çekilmesini sağlayan koda yönlendirmedir -->
	<bean id="UrbSourceUserDetailsService" class="com.urbsource.security.UrbSourceUserDetailsService"></bean>

	<!-- SESSION REGISTRY BEAN -->
	<bean id="concurrencyFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<property name="sessionRegistry" ref="sessionRegistry" />
		<property name="expiredUrl" value="/expired.html" />
	</bean>


	<bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<property name="maximumSessions" value="1" />
		<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
	</bean>

	<bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" ></bean>

</beans>